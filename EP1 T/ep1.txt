Sáida: (Para cada instante)

>> Uma lista com quais aviões estão esperando para pousar ou decolar;
>> O tempo médio de espera de pouso;
>> O tempo médio de espera para decolagem;
>> A quantidade média de combustível dos aviões que estão esperando para pousar;
>> A quantidade média de combustível disponível nos aviões que já pousaram;
>> A quantidade de aviões pousando/decolando em condições de emergência;

>>> Situação de cada pista;


Entrada:

>> T - Unidades de tempo da simulação;
>> K - Número máximo de aviões que chegam no aeroporto por unidade de tempo;
>> pp - Probabilidade de ser um pouso;
>> pd - Probabilidade de ser uma decolagem (1 - pp);
>> pe - Probabilidade de ser de emergência;
>> C - Tempo máximo de combustível de um avião que deseja pousar;
>> V - Tempo máximo de voo de uma decolagem;

LINKS:
    https://www.out4mind.com/listas-ligadas-simples-em-c-parte-i/#:~:text=As%20listas%20ligadas%20s%C3%A3o%20estruturas,duplamente%20ligadas%20e%20listas%20circulares.

Funções: 

AVIÕES:
    void Avioes::cria_aviao(char *id_code, int comb, int dec, int voo, int tipo) {
        for(int i = 0; i < 5; i++) {
            id[i] = id_code[i];
        }
        time_combustivel = comb;
        time_decolagem = dec;
        time_voo = voo;
        type = tipo;
        id_pista = -1;   //Por padrão o avião sempre estará no ar;
    }

    void Avioes::pass_time() {
        time_combustivel--;
    }



PISTAS: 
    void Pista::cria_pista(int id_number) { // Criação da pista;
        id = id_number;
        status = 0;
        timer = 0;
    }

    void Pista::pass_time() { // Passagem de tempo;
        timer = timer - 1;
        if(timer == 0) {
            status = 0;
        }
    }

    void Pista::pouso_ou_decolagem(int tempo, char *id_airplane) { // Utilização da pista;
        timer = tempo;
        status = 1;
        for(int i = 0; i < 5; i++) {
            id_aviao[i] = id_airplane[i];
        }
    }

    void Pista::info_pista() { // Imprimir as informações da pista;
        cout << "ID Pista: " << id << endl;
        cout << "Status: ";
        if(status == 0) cout << "Livre\n";
        else {
            cout << "Interditada/Ocupada\n"; 
            cout << "Durante: " << timer << endl;
        }
    } 